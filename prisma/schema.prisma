// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Items{
  itemId Int @id @default(autoincrement()) @map("itemId")
  itemName String @unique @map("itemName")
  itemStat String @map("itemStat")
  itemPrice BigInt @map("itemPrice")
  classId Int? @map("classId") 
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  class Classes? @relation(fields: [classId], references: [classId], onDelete: SetNull)

  characterItem CharacterItems[]
  characterInventory CharacterInventory[]

  @@map("Items")
}

model Accounts{
  accountId BigInt @id @default(autoincrement()) @map("accountId")
  userId String @unique @map("userId")
  password String @map("password")
  userName String @map("userName")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  character Characters[]

  @@map("Accounts")
}

model Characters{
  characterId BigInt @id @default(autoincrement()) @map("characterId")
  characterName String @unique @map("characterName")
  characterHp BigInt @map("characterHp")
  characterPower BigInt @map("characterPower")
  characterSpeed Int @map("characterSpeed")
  characterMoney BigInt @map("characterMoney")
  accountId BigInt @map("accountId")
  classId Int? @map("classId") // 캐릭터 생성 시 필수 입력값이지만 특정 클래스가 없어질 가능성이 존재
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  account Accounts @relation(fields: [accountId], references: [accountId], onDelete: Cascade)
  class Classes? @relation(fields: [classId], references: [classId], onDelete: SetNull)

  characterItem CharacterItems[]
  CharacterInventory CharacterInventory[]

  @@map("Characters")
}

model Classes{
  classId Int @id @default(autoincrement()) @map("classId")
  className String @unique @map("className")
  classHp BigInt @map("classHp")
  classPower BigInt @map("classPower")
  classSpeed Int @map("classSpeed")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  item Items[]
  character Characters[]

  @@map("Classes")
}

model CharacterItems{
  characterItemId BigInt @id @default(autoincrement()) @map("characterItemId")
  characterId BigInt @map("characterId")
  itemId Int @map("itemId")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  Character Characters @relation(fields: [characterId], references: [characterId], onDelete: Cascade)
  Item Items @relation(fields: [itemId], references: [itemId])

  @@map("CharacterItems")
}

model CharacterInventory{
  characterInventoryId BigInt @id @default(autoincrement()) @map("characterInventoryId")
  characterId BigInt @map("characterId")
  itemId Int @map("itemId")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  Character Characters @relation(fields: [characterId], references: [characterId], onDelete: Cascade)
  Item Items @relation(fields: [itemId], references: [itemId])

  @@map("CharacterInventory")
}